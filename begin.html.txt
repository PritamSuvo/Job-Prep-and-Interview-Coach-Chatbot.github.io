<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Job Prep & Interview Coach with Voice</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #f4f7fa;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }
    .chat-container {
      width: 420px;
      max-width: 100%;
      background: white;
      box-shadow: 0 4px 20px rgba(0,0,0,0.1);
      border-radius: 10px;
      display: flex;
      flex-direction: column;
      overflow: hidden;
    }
    .chat-header {
      background: #007bff;
      color: white;
      padding: 15px;
      font-weight: bold;
      font-size: 1.2rem;
      text-align: center;
    }
    .chat-messages {
      flex-grow: 1;
      padding: 15px;
      overflow-y: auto;
      background: #e9eff7;
      white-space: pre-line;
    }
    .message {
      margin-bottom: 15px;
      max-width: 80%;
      line-height: 1.4;
      padding: 10px 15px;
      border-radius: 20px;
      clear: both;
    }
    .message.user {
      background: #007bff;
      color: white;
      float: right;
      border-bottom-right-radius: 0;
    }
    .message.bot {
      background: #ececec;
      color: #333;
      float: left;
      border-bottom-left-radius: 0;
    }
    .chat-input {
      display: flex;
      border-top: 1px solid #ccc;
    }
    .chat-input input {
      flex-grow: 1;
      border: none;
      padding: 15px;
      font-size: 1rem;
      outline: none;
      border-radius: 0 0 0 10px;
    }
    .chat-input button {
      background: #007bff;
      border: none;
      color: white;
      padding: 0 20px;
      cursor: pointer;
      font-weight: bold;
      border-radius: 0 0 10px 0;
      transition: background 0.3s ease;
    }
    .chat-input button:hover {
      background: #0056b3;
    }
  </style>
</head>
<body>

<div class="chat-container">
  <div class="chat-header">Job Prep & Interview Coach</div>
  <div id="chatMessages" class="chat-messages"></div>
  <form id="chatForm" class="chat-input" autocomplete="off">
    <input type="text" id="userInput" placeholder="Ask me about job prep, interviews..." required />
    <button type="submit">Send</button>
  </form>
</div>

<script>
  const chatMessages = document.getElementById('chatMessages');
  const chatForm = document.getElementById('chatForm');
  const userInput = document.getElementById('userInput');

  // Text-to-speech function
  function speak(text) {
    if (!('speechSynthesis' in window)) {
      console.warn('Speech Synthesis not supported');
      return;
    }
    const utterance = new SpeechSynthesisUtterance(text);
    utterance.lang = 'en-US';
    speechSynthesis.speak(utterance);
  }

  // Add message functions
  function addUserMessage(text) {
    const msg = document.createElement('div');
    msg.classList.add('message', 'user');
    msg.textContent = text;
    chatMessages.appendChild(msg);
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  function addBotMessage(text) {
    const msg = document.createElement('div');
    msg.classList.add('message', 'bot');
    msg.textContent = text;
    chatMessages.appendChild(msg);
    chatMessages.scrollTop = chatMessages.scrollHeight;
    speak(text);
  }

  // Initial greeting
  addBotMessage("Hi! I am your Job Preparation and Interview Coaching assistant. Ask me about resumes, interview tips, mock questions, or HR questions.");

  chatForm.addEventListener('submit', (e) => {
    e.preventDefault();
    const userText = userInput.value.trim();
    if (!userText) return;

    addUserMessage(userText);
    userInput.value = '';

    setTimeout(() => {
      generateBotResponse(userText.toLowerCase());
    }, 700);
  });

  // Mock interview and HR questions with answers
  const mockInterviewQA = [
    {
      question: "Can you describe a challenging situation at work and how you handled it?",
      answer: "Sure. I faced a project delay due to resource shortage. I prioritized tasks, coordinated with teams, and communicated transparently, which helped us complete on time."
    },
    {
      question: "Why do you want this job?",
      answer: "I’m passionate about this industry and believe my skills align well with the role to contribute positively to your company."
    },
    {
      question: "Tell me about yourself.",
      answer: "I have a background in computer science, with experience in software development and problem-solving, eager to grow professionally."
    }
  ];

  const hrQuestionsQA = [
    {
      question: "What are your strengths?",
      answer: "My strengths include strong communication, adaptability, and a results-driven approach."
    },
    {
      question: "What is your biggest weakness?",
      answer: "I sometimes focus too much on details, but I’ve learned to balance this by prioritizing effectively."
    },
    {
      question: "Where do you see yourself in 5 years?",
      answer: "I see myself growing into a leadership role and contributing significantly to the company's success."
    }
  ];

  // Function to find Q&A by keyword
  function findQA(keyword, list) {
    for (const qa of list) {
      if (qa.question.toLowerCase().includes(keyword)) {
        return qa;
      }
    }
    return null;
  }

  // Bot response logic
  function generateBotResponse(input) {
    if (input.includes('resume') || input.includes('cv')) {
      addBotMessage("To make a strong resume, highlight your skills, achievements, and tailor it to the job description. Need a template or tips?");
    }
    else if (input.includes('interview tips') || input.includes('interview')) {
      addBotMessage("Interview tip: Research the company, practice common questions, dress professionally, and be confident. Want me to simulate an interview question?");
    }
    else if (input.includes('common questions')) {
      addBotMessage("Here are some common interview questions:\n- Tell me about yourself.\n- Why do you want this job?\n- What are your strengths and weaknesses?");
    }
    else if (input.includes('simulate') && input.includes('question')) {
      // Pick a random mock interview question
      const q = mockInterviewQA[Math.floor(Math.random() * mockInterviewQA.length)];
      addBotMessage(Mock Interview Question:\n${q.question}\nTry answering or ask for the answer.);
    }
    else if ((input.includes('answer') || input.includes('explain')) && input.includes('challenging situation')) {
      const qa = mockInterviewQA.find(qa => qa.question.toLowerCase().includes('challenging situation'));
      addBotMessage(Answer: ${qa.answer});
    }
    else if ((input.includes('answer') || input.includes('explain')) && input.includes('why do you want this job')) {
      const qa = mockInterviewQA.find(qa => qa.question.toLowerCase().includes('why do you want this job'));
      addBotMessage(Answer: ${qa.answer});
    }
    else if ((input.includes('answer') || input.includes('explain')) && input.includes('tell me about yourself')) {
      const qa = mockInterviewQA.find(qa => qa.question.toLowerCase().includes('tell me about yourself'));
      addBotMessage(Answer: ${qa.answer});
    }
    else if (input.includes('hr questions')) {
      addBotMessage("Here are some common HR questions:\n- What are your strengths?\n- What is your biggest weakness?\n- Where do you see yourself in 5 years?");
    }
    else if ((input.includes('answer') || input.includes('explain')) && input.includes('strengths')) {
      const qa = hrQuestionsQA.find(qa => qa.question.toLowerCase().includes('strengths'));
      addBotMessage(Answer: ${qa.answer});
    }
    else if ((input.includes('answer') || input.includes('explain')) && input.includes('weakness')) {
      const qa = hrQuestionsQA.find(qa => qa.question.toLowerCase().includes('weakness'));
      addBotMessage(Answer: ${qa.answer});
    }
    else if ((input.includes('answer') || input.includes('explain')) && input.includes('5 years')) {
      const qa = hrQuestionsQA.find(qa => qa.question.toLowerCase().includes('5 years'));
      addBotMessage(Answer: ${qa.answer});
    }
    else if (input.includes('thank')) {
      addBotMessage("You're welcome! Let me know if you have more questions.");
    }
    else if (input.includes('help')) {
      addBotMessage("I can help you with resume tips, interview questions, mock interviews, and HR questions. What would you like?");
    }
    else {
      addBotMessage("Sorry, I didn't quite get that. You can ask me about resume tips, interview coaching, mock interview questions, or HR questions.");
    }
  }
</script>

</body>
</html>